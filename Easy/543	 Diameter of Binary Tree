/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int ans=0;
        depth(root, ans);
        return ans;
    }
    
    int depth(TreeNode* root, int& ans){
                
        if(root==NULL) return 0;
        int l=depth(root->left, ans); // if root =1 , 1 er left child er depth 2
        int r=depth(root->right, ans);  // 1 er right child er depth 1
        ans=max(ans, l+r); // l+r = 2+1=3 //depth=parent to child edge + 1; // left edge and right edge is replace by additio len
        return max(r,l)+1;//max(max(x+1,y+1),x+y+2);
    }
};
